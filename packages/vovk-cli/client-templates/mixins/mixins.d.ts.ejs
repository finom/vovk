<%- `// auto-generated by Vovk.ts ${new Date().toISOString()}` %>
import type { VovkRequest, VovkStreamAsyncIterable, KnownAny } from 'vovk';

<% Object.values(t.schema.segments).filter((segment) => segment.emitSchema && segment.segmentType === 'mixin').forEach((segment, i) => {
  Object.values(segment.controllers).forEach((controllerSchema) => {
      Object.entries(controllerSchema.handlers).forEach(([handlerName, handlerSchema]) => { 
            ['body', 'query', 'params', 'output', 'iteration'].forEach((type) => {
              if (handlerSchema.validation?.[type]?.$defs || handlerSchema.validation?.[type]?.definitions) { %>
<%- t.convertJSONSchemaToTypeScriptDef(handlerSchema.validation?.[type], `$defs__${controllerSchema.rpcModuleName}__${handlerName}__${type}`).$defs %>
              <% }
            }) 
        }) 
    }) 
}); %>

export type Controllers = {
    <% Object.values(t.schema.segments).filter((segment) => segment.emitSchema && segment.segmentType === 'mixin').forEach((segment, i) => {%>
      <% Object.values(segment.controllers).forEach((controllerSchema) => { %>
      <%= controllerSchema.rpcModuleName %>: {
        <% Object.entries(controllerSchema.handlers).forEach(([handlerName, handlerSchema]) => { %>
          <%= handlerName %>: (req: VovkRequest<<%- t.convertJSONSchemaToTypeScriptDef(handlerSchema.validation?.body, `$defs__${controllerSchema.rpcModuleName}__${handlerName}__body`).$type %>, <%- t.convertJSONSchemaToTypeScriptDef(handlerSchema.validation?.query, `$defs__${controllerSchema.rpcModuleName}__${handlerName}__query`).$type %>, <%- t.convertJSONSchemaToTypeScriptDef(handlerSchema.validation?.params, `$defs__${controllerSchema.rpcModuleName}__${handlerName}__params`).$type %>>) => <%- handlerSchema.validation?.output ? `Promise<${t.convertJSONSchemaToTypeScriptDef(handlerSchema.validation?.output, `$defs__${controllerSchema.rpcModuleName}__${handlerName}__output`).$type}>` : handlerSchema.validation?.iteration ? `Promise<VovkStreamAsyncIterable<${t.convertJSONSchemaToTypeScriptDef(handlerSchema.validation?.iteration, `$defs__${controllerSchema.rpcModuleName}__${handlerName}__iteration`).$type}>>` : 'Promise<KnownAny>' %>,
        <% }) %>
      };
     <% }) %>
    <% }); %>
};

