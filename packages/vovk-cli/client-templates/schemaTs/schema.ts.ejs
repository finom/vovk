<%- `// auto-generated by Vovk.ts ${new Date().toISOString()}` %>
<% if(t.isVovkProject) { %>
import meta from './<%= t.schemaOutDir %>/_meta.json' with { type: "json" };
<% } %>
<% Object.values(t.schema.segments).filter((segment) => segment.emitSchema).forEach((segment, i) => { if(segment.segmentName !== t.EXTENSIONS_SEGMENT_NAME) { %>
import segment<%= i %> from './<%= t.schemaOutDir %>/<%= segment.segmentName || t.ROOT_SEGMENT_FILE_NAME %>.json' with { type: "json" };
<% } else { %>
import segment<%= i %> from './<%= t.EXTENSIONS_SEGMENT_NAME %>.json' with { type: "json" };
<% }}) %>
const segments = {<% Object.values(t.schema.segments).filter((segment) => segment.emitSchema).forEach((segment, i) => { %>
  '<%= segment.segmentName %>': segment<%= i %>,<% }) %>
};

export const schema = {
  $schema: '<%- t.VovkSchemaIdEnum.SCHEMA %>',
  segments,
  meta: {
    $schema: '<%- t.VovkSchemaIdEnum.META %>',
    apiRoot: '<%= t.apiRoot %>', // for debugging purposes
    <% if(t.isVovkProject) { %>
    ...meta,
    <% } %>
  }
};
