<%- `// auto-generated by Vovk.ts ${new Date().toISOString()}` %>
import type { VovkRequest, VovkStreamAsyncIterable, KnownAny } from 'vovk';
export type Controllers = {
  <% Object.values(t.schema.segments.extensions.controllers).forEach((controllerSchema) => { %>
    <%= controllerSchema.rpcModuleName %>: {
    <% Object.entries(controllerSchema.handlers).forEach(([handlerName, handler]) => { %>
      <%= handlerName %>: (req: VovkRequest<<%- t.convertJSONSchemaToTypeScriptDef(handler.validation?.body) ?? 'null' %>, <%- t.convertJSONSchemaToTypeScriptDef(handler.validation?.query) ?? 'undefined' %>, <%- t.convertJSONSchemaToTypeScriptDef(handler.validation?.params ?? 'undefined') %>>) => <%- handler.validation?.output ? `Promise<${t.convertJSONSchemaToTypeScriptDef(handler.validation?.output)}>` : handler.validation?.iteration ? `Promise<VovkStreamAsyncIterable<${t.convertJSONSchemaToTypeScriptDef(handler.validation?.iteration)}>>` : 'Promise<KnownAny>' %>,
    <% }) %>
    };
  <% }) %>
};

