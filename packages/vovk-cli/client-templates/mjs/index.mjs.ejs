<%- `// auto-generated by Vovk.ts ${new Date().toISOString()}` %>
import { fetcher } from '<%= t.imports.module.fetcher %>';
import { createRPC } from '<%= t.imports.module.createRPC %>';
import { schema } from './schema.cjs';
<% if (t.imports.module.validateOnClient) { %>
import { validateOnClient } from '<%= t.imports.module.validateOnClient %>';
<% } else { %>
const validateOnClient = undefined;
<% } 
Object.values(t.schema.segments).filter((segment) => segment.emitSchema).forEach((segment, i) => {
  Object.keys(segment.controllers).forEach((rpcModuleName) => { %>
export const <%= rpcModuleName %> = createRPC(
  schema, '<%= segment.segmentName %>', '<%= rpcModuleName %>', fetcher,
  { validateOnClient, <%- typeof t.segmentMeta[segment.segmentName].segmentNameOverride === 'string' ? `segmentNameOverride: '${t.segmentMeta[segment.segmentName].segmentNameOverride}', ` : '' %><%- segment.segmentType === 'mixin' ? '' : `apiRoot: '${segment.segmentApiRoot ?? t.apiRoot}'` %> }
);
<% 
  }); 
});
%>
export { schema };