{"version":3,"file":"WithDtoClientController.js","sourceRoot":"","sources":["WithDtoClientController.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  post,\n  put,\n  get,\n  prefix,\n  HttpStatus,\n  type VovkControllerBody,\n  type VovkControllerQuery,\n  type VovkControllerParams,\n  type VovkControllerOutput,\n  type VovkRequest,\n} from 'vovk';\nimport { openapi } from 'vovk-openapi';\nimport { withDto } from 'vovk-dto';\nimport { validateOnClient } from 'vovk-dto/validateOnClient';\nimport {\n  ComplainingDto,\n  HandleAllBodyDto,\n  HandleAllOutputDto,\n  HandleAllParamsDto,\n  HandleAllQueryDto,\n  HandleBodyBodyDto,\n  HandleNestedQueryDto,\n  HandleOutputOutputDto,\n  HandleOutputQueryDto,\n  HandleParamsDto,\n  HandleQueryQueryDto,\n  HandleStreamQueryDto,\n  IterationDto,\n  QueryValuesDto,\n} from './WithDtoClientController.dto';\nimport { WithDtoClientControllerRPC } from 'vovk-client';\nimport { plainToInstance } from 'class-transformer';\nimport { ok } from 'node:assert';\n\nclass WithDtoClientService {\n  static handleAll({\n    body,\n    query,\n    params,\n    vovkParams,\n  }: {\n    body: VovkControllerBody<typeof WithDtoClientController.handleAll>;\n    query: VovkControllerQuery<typeof WithDtoClientController.handleAll>;\n    params: VovkControllerParams<typeof WithDtoClientController.handleAll>;\n    vovkParams: VovkControllerParams<typeof WithDtoClientController.handleAll>;\n  }) {\n    return {\n      body,\n      query,\n      params,\n      vovkParams,\n    } satisfies VovkControllerOutput<typeof WithDtoClientController.handleAll>;\n  }\n}\n\n@prefix('with-dto')\nexport default class WithDtoClientController {\n  @openapi({\n    summary: 'This is a summary',\n    description: 'This is a description',\n  })\n  @openapi.error(HttpStatus.BAD_REQUEST, 'This is a bad request')\n  @post('all/:foo/:bar')\n  static handleAll = withDto({\n    body: HandleAllBodyDto,\n    query: HandleAllQueryDto,\n    params: HandleAllParamsDto,\n    output: HandleAllOutputDto,\n    handle: async (req, params) => {\n      const body = await req.vovk.body();\n      const query = req.vovk.query();\n      const vovkParams = req.vovk.params();\n\n      ok(body instanceof HandleAllBodyDto, 'Body is not an instance of HandleAllBodyDto');\n      ok(query instanceof HandleAllQueryDto, 'Query is not an instance of HandleAllQueryDto');\n      ok(vovkParams instanceof HandleAllParamsDto, 'Params is not an instance of HandleAllParamsDto');\n\n      return WithDtoClientService.handleAll({\n        body,\n        query,\n        params,\n        vovkParams,\n      });\n    },\n  });\n\n  @get.auto()\n  static handleNestedQuery = withDto({\n    query: HandleNestedQueryDto,\n    handle: (req) => {\n      return req.vovk.query();\n    },\n  });\n\n  @get.auto()\n  static handleNestedQueryClient = async (req: VovkRequest<never, HandleNestedQueryDto>) => {\n    const query = { ...req.vovk.query() };\n    return WithDtoClientControllerRPC.handleNestedQuery({\n      query: plainToInstance(HandleNestedQueryDto, query),\n      validateOnClient,\n    });\n  };\n\n  @get.auto()\n  static handleOutput = withDto({\n    query: HandleOutputQueryDto,\n    output: HandleOutputOutputDto,\n    handle: async (req) => {\n      // We expect the query.helloOutput to be \"world\" to match output shape\n      return { hello: req.vovk.query().helloOutput as 'world' };\n    },\n  });\n\n  @get.auto()\n  static handleOutputClient = async (req: VovkRequest<never, HandleOutputQueryDto>) => {\n    const query = { helloOutput: req.nextUrl.searchParams.get('helloOutput') };\n    return WithDtoClientControllerRPC.handleOutput({\n      query: plainToInstance(HandleOutputQueryDto, query),\n      validateOnClient,\n    });\n  };\n\n  @get.auto()\n  static handleStream = withDto({\n    query: HandleStreamQueryDto,\n    iteration: IterationDto,\n    async *handle(req) {\n      for (const value of req.vovk.query().values) {\n        yield { value };\n      }\n    },\n  });\n\n  @post.auto()\n  static handleSchemaComplaints = withDto({\n    body: ComplainingDto,\n    handle: async (req) => {\n      return req.json();\n    },\n  });\n\n  @post.auto()\n  static handleNothitng = withDto({\n    // no DTOs required here\n    handle: async () => {\n      return { nothing: 'here' } as const;\n    },\n  });\n\n  @post.auto()\n  static handleFormData = withDto({\n    body: withDto.formData,\n    query: HandleQueryQueryDto,\n    handle: async (req) => {\n      const formData = await req.vovk.form<{ hello: 'world' }>();\n      const search = req.vovk.query().search;\n      return { formData, search };\n    },\n  });\n\n  @post.auto()\n  static disableServerSideValidationBool = withDto({\n    disableServerSideValidation: true,\n    body: HandleBodyBodyDto,\n    query: HandleQueryQueryDto,\n    handle: async (req) => {\n      const body = await req.json();\n      const search = req.nextUrl.searchParams.get('search');\n      return { body, search };\n    },\n  });\n\n  @post.auto()\n  static disableServerSideValidationStrings = withDto({\n    disableServerSideValidation: ['body'],\n    body: HandleBodyBodyDto,\n    query: HandleQueryQueryDto,\n    handle: async (req) => {\n      const body = await req.json();\n      const search = req.nextUrl.searchParams.get('search');\n      return { body, search };\n    },\n  });\n  @post.auto()\n  static skipSchemaEmissionBool = withDto({\n    skipSchemaEmission: true,\n    body: HandleBodyBodyDto,\n    query: HandleQueryQueryDto,\n    handle: async (req) => {\n      const body = await req.json();\n      const search = req.nextUrl.searchParams.get('search');\n      return { body, search };\n    },\n  });\n  @post.auto()\n  static skipSchemaEmissionStrings = withDto({\n    skipSchemaEmission: ['body'],\n    body: HandleBodyBodyDto,\n    query: HandleQueryQueryDto,\n    handle: async (req) => {\n      const body = await req.json();\n      const search = req.nextUrl.searchParams.get('search');\n      return { body, search };\n    },\n  });\n  @post.auto()\n  static validateEachIteration = withDto({\n    validateEachIteration: true,\n    query: QueryValuesDto,\n    iteration: IterationDto,\n    async *handle(req) {\n      for (const value of req.vovk.query().values) {\n        yield { value };\n      }\n    },\n  });\n\n  // The tests are run on nodejs without TS compilator so decorators are not supported and it's not possible import a DTO at .test.ts file\n  // this endpoint and other ones ended with \"Client\" implement a proxy to be able to test errors on client side\n  @post('all/:foo/:bar/client')\n  static handleAllClient = async (\n    req: VovkRequest<HandleAllBodyDto, HandleAllQueryDto>,\n    params: HandleAllParamsDto\n  ) => {\n    const body = await req.json();\n    const query = { search: req.nextUrl.searchParams.get('search') };\n    const result = await WithDtoClientControllerRPC.handleAll({\n      body: plainToInstance(HandleAllBodyDto, body),\n      query: plainToInstance(HandleAllQueryDto, query),\n      params: plainToInstance(HandleAllParamsDto, params),\n      transform: (resp) => plainToInstance(HandleAllOutputDto, resp),\n      validateOnClient,\n    });\n\n    ok(result instanceof HandleAllOutputDto, 'Output is not an instance of HandleAllOutputDto');\n\n    return result;\n  };\n\n  @get.auto()\n  static handleQuery = withDto({\n    query: HandleQueryQueryDto,\n    handle: (req) => {\n      return req.vovk.query();\n    },\n  });\n\n  @get.auto()\n  static handleQueryClient = async (req: VovkRequest<never, HandleQueryQueryDto>) => {\n    const query = { search: req.nextUrl.searchParams.get('search') };\n    return WithDtoClientControllerRPC.handleQuery({\n      query: plainToInstance(HandleQueryQueryDto, query),\n      validateOnClient,\n    });\n  };\n\n  @post.auto()\n  static handleBody = withDto({\n    body: HandleBodyBodyDto,\n    handle: async (req) => {\n      return req.vovk.body();\n    },\n  });\n\n  @post.auto()\n  static handleBodyClient = async (req: VovkRequest<HandleBodyBodyDto>) => {\n    const body = await req.json();\n    return WithDtoClientControllerRPC.handleBody({\n      body: plainToInstance(HandleBodyBodyDto, body),\n      validateOnClient,\n    });\n  };\n\n  @put('x/:foo/:bar/y')\n  static handleParams = withDto({\n    params: HandleParamsDto,\n    handle: async (req) => {\n      return req.vovk.params();\n    },\n  });\n\n  @put('x/:foo/:bar/y/client')\n  static handleParamsClient = async (_req: VovkRequest, params: HandleParamsDto) => {\n    return WithDtoClientControllerRPC.handleParams({\n      params: plainToInstance(HandleParamsDto, params),\n      validateOnClient,\n    });\n  };\n}\n"]}