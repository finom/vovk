{"version":3,"file":"YupControllerAndServiceEntityController.js","sourceRoot":"","sources":["YupControllerAndServiceEntityController.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACnC,OAAO,KAAK,GAAG,MAAM,KAAK,CAAC;AAE3B,OAAO,oCAAoC,MAAM,wCAAwC,CAAC;AAG3E,IAAM,uCAAuC,GAA7C,MAAM,uCAAuC;IAEnD,AAAP,MAAM,CAAC,kCAAkC,GAAG,OAAO,CAAC;QAClD,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;QAC3C,MAAM,CAAC,GAAG;YACR,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtD,OAAO,oCAAoC,CAAC,kCAAkC,CAAC,MAAM,CAAC,CAAC;QACzF,CAAC;KACF,CAAC,CAAC;IAGI,AAAP,MAAM,CAAC,mCAAmC,GAAG,OAAO,CAAC;QACnD,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;YACf,GAAG,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE;SAClD,CAAC;QACF,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;QACtC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,MAAsB;YACtC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAC;YACtB,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;YAC9B,MAAM,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAE5C,OAAO,oCAAoC,CAAC,mCAAmC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC/F,CAAC;KACF,CAAC,CAAC;IAGI,AAAP,MAAM,CAAC,mCAAmC,GAAG,GAAG,EAAE;QAChD,MAAM;IACR,CAAC,CAAC;IAGK,AAAP,MAAM,CAAC,mCAAmC,GAAG,GAAG,EAAE;QAChD,MAAM;IACR,CAAC,CAAC;;AAhCK;IADN,GAAG,EAAE;;yFAQH;AAGI;IADN,GAAG,CAAC,KAAK,CAAC;;0FAaR;AAGI;IADN,IAAI,EAAE;;0FAGL;AAGK;IADN,GAAG,CAAC,KAAK,CAAC;;0FAGT;AAlCiB,uCAAuC;IAD3D,MAAM,CAAC,qCAAqC,CAAC;GACzB,uCAAuC,CAmC3D;eAnCoB,uCAAuC","sourcesContent":["import { prefix, get, put, post, del } from 'vovk';\nimport { withYup } from 'vovk-yup';\nimport * as yup from 'yup';\n\nimport YupControllerAndServiceEntityService from './YupControllerAndServiceEntityService';\n\n@prefix('yup-controller-and-service-entities')\nexport default class YupControllerAndServiceEntityController {\n  @get()\n  static getYupControllerAndServiceEntities = withYup({\n    query: yup.object({ search: yup.string() }),\n    handle(req) {\n      const search = req.nextUrl.searchParams.get('search');\n\n      return YupControllerAndServiceEntityService.getYupControllerAndServiceEntities(search);\n    },\n  });\n\n  @put(':id')\n  static updateYupControllerAndServiceEntity = withYup({\n    body: yup.object({\n      foo: yup.mixed().oneOf(['bar', 'baz']).required(),\n    }),\n    query: yup.object({ q: yup.string() }),\n    async handle(req, params: { id: string }) {\n      const { id } = params;\n      const body = await req.json();\n      const q = req.nextUrl.searchParams.get('q');\n\n      return YupControllerAndServiceEntityService.updateYupControllerAndServiceEntity(id, q, body);\n    },\n  });\n\n  @post()\n  static createYupControllerAndServiceEntity = () => {\n    // ...\n  };\n\n  @del(':id')\n  static deleteYupControllerAndServiceEntity = () => {\n    // ...\n  };\n}\n"]}