{"version":3,"file":"ZodControllerAndServiceEntityController.js","sourceRoot":"","sources":["ZodControllerAndServiceEntityController.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACnC,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,oCAAoC,MAAM,wCAAwC,CAAC;AAG3E,IAAM,uCAAuC,GAA7C,MAAM,uCAAuC;IAEnD,AAAP,MAAM,CAAC,kCAAkC,GAAG,OAAO,CAAC;QAClD,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;QACvC,MAAM,CAAC,GAAG;YACR,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtD,OAAO,oCAAoC,CAAC,kCAAkC,CAAC,MAAM,CAAC,CAAC;QACzF,CAAC;KACF,CAAC,CAAC;IAGI,AAAP,MAAM,CAAC,mCAAmC,GAAG,OAAO,CAAC;QACnD,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;YACb,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SACnD,CAAC;QACF,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;QAClC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;QACpC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM;YACtB,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAC;YACtB,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;YAC9B,MAAM,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAE5C,OAAO,oCAAoC,CAAC,mCAAmC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC/F,CAAC;KACF,CAAC,CAAC;IAGI,AAAP,MAAM,CAAC,mCAAmC,GAAG,GAAG,EAAE;QAChD,MAAM;IACR,CAAC,CAAC;IAGK,AAAP,MAAM,CAAC,mCAAmC,GAAG,GAAG,EAAE;QAChD,MAAM;IACR,CAAC,CAAC;;AAjCK;IADN,GAAG,EAAE;;yFAQH;AAGI;IADN,GAAG,CAAC,KAAK,CAAC;;0FAcR;AAGI;IADN,IAAI,EAAE;;0FAGL;AAGK;IADN,GAAG,CAAC,KAAK,CAAC;;0FAGT;AAnCiB,uCAAuC;IAD3D,MAAM,CAAC,qCAAqC,CAAC;GACzB,uCAAuC,CAoC3D;eApCoB,uCAAuC","sourcesContent":["import { prefix, get, put, post, del } from 'vovk';\nimport { withZod } from 'vovk-zod';\nimport { z } from 'zod';\n\nimport ZodControllerAndServiceEntityService from './ZodControllerAndServiceEntityService';\n\n@prefix('zod-controller-and-service-entities')\nexport default class ZodControllerAndServiceEntityController {\n  @get()\n  static getZodControllerAndServiceEntities = withZod({\n    query: z.object({ search: z.string() }),\n    handle(req) {\n      const search = req.nextUrl.searchParams.get('search');\n\n      return ZodControllerAndServiceEntityService.getZodControllerAndServiceEntities(search);\n    },\n  });\n\n  @put(':id')\n  static updateZodControllerAndServiceEntity = withZod({\n    body: z.object({\n      foo: z.union([z.literal('bar'), z.literal('baz')]),\n    }),\n    query: z.object({ q: z.string() }),\n    params: z.object({ id: z.string() }),\n    async handle(req, params) {\n      const { id } = params;\n      const body = await req.json();\n      const q = req.nextUrl.searchParams.get('q');\n\n      return ZodControllerAndServiceEntityService.updateZodControllerAndServiceEntity(id, q, body);\n    },\n  });\n\n  @post()\n  static createZodControllerAndServiceEntity = () => {\n    // ...\n  };\n\n  @del(':id')\n  static deleteZodControllerAndServiceEntity = () => {\n    // ...\n  };\n}\n"]}