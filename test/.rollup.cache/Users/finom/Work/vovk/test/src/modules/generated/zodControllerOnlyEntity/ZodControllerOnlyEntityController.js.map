{"version":3,"file":"ZodControllerOnlyEntityController.js","sourceRoot":"","sources":["ZodControllerOnlyEntityController.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACnC,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAGT,IAAM,iCAAiC,GAAvC,MAAM,iCAAiC;IAE7C,AAAP,MAAM,CAAC,4BAA4B,GAAG,OAAO,CAAC;QAC5C,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;QACvC,MAAM,CAAC,GAAG;YACR,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtD,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC;QACjC,CAAC;KACF,CAAC,CAAC;IAGI,AAAP,MAAM,CAAC,6BAA6B,GAAG,OAAO,CAAC;QAC7C,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;YACb,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SACnD,CAAC;QACF,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;QAClC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;QACpC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM;YACtB,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAC;YACtB,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;YAC9B,MAAM,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAE5C,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;QACzB,CAAC;KACF,CAAC,CAAC;IAGI,AAAP,MAAM,CAAC,6BAA6B,GAAG,GAAG,EAAE;QAC1C,MAAM;IACR,CAAC,CAAC;IAGK,AAAP,MAAM,CAAC,6BAA6B,GAAG,GAAG,EAAE;QAC1C,MAAM;IACR,CAAC,CAAC;;AAjCK;IADN,GAAG,EAAE;;6EAQH;AAGI;IADN,GAAG,CAAC,KAAK,CAAC;;8EAcR;AAGI;IADN,IAAI,EAAE;;8EAGL;AAGK;IADN,GAAG,CAAC,KAAK,CAAC;;8EAGT;AAnCiB,iCAAiC;IADrD,MAAM,CAAC,8BAA8B,CAAC;GAClB,iCAAiC,CAoCrD;eApCoB,iCAAiC","sourcesContent":["import { prefix, get, put, post, del } from 'vovk';\nimport { withZod } from 'vovk-zod';\nimport { z } from 'zod';\n\n@prefix('zod-controller-only-entities')\nexport default class ZodControllerOnlyEntityController {\n  @get()\n  static getZodControllerOnlyEntities = withZod({\n    query: z.object({ search: z.string() }),\n    handle(req) {\n      const search = req.nextUrl.searchParams.get('search');\n\n      return { results: [], search };\n    },\n  });\n\n  @put(':id')\n  static updateZodControllerOnlyEntity = withZod({\n    body: z.object({\n      foo: z.union([z.literal('bar'), z.literal('baz')]),\n    }),\n    query: z.object({ q: z.string() }),\n    params: z.object({ id: z.string() }),\n    async handle(req, params) {\n      const { id } = params;\n      const body = await req.json();\n      const q = req.nextUrl.searchParams.get('q');\n\n      return { id, body, q };\n    },\n  });\n\n  @post()\n  static createZodControllerOnlyEntity = () => {\n    // ...\n  };\n\n  @del(':id')\n  static deleteZodControllerOnlyEntity = () => {\n    // ...\n  };\n}\n"]}