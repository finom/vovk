{"version":3,"file":"DtoControllerOnlyEntityController.js","sourceRoot":"","sources":["DtoControllerOnlyEntityController.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACnC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAEjD,MAAM,oCAAoC;IAExC,MAAM,CAAS;CAChB;AADC;IADC,QAAQ,EAAE;;oEACI;AAGjB,MAAM,oCAAoC;IAExC,GAAG,CAAgB;CACpB;AADC;IADC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;iEACF;AAGrB,MAAM,qCAAqC;IAEzC,CAAC,CAAS;CACX;AADC;IADC,QAAQ,EAAE;;gEACD;AAIG,IAAM,iCAAiC,GAAvC,MAAM,iCAAiC;IAE7C,AAAP,MAAM,CAAC,4BAA4B,GAAG,OAAO,CAAC;QAC5C,KAAK,EAAE,oCAAoC;QAC3C,MAAM,CAAC,GAAG;YACR,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAEpC,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC;QACjC,CAAC;KACF,CAAC,CAAC;IAGI,AAAP,MAAM,CAAC,6BAA6B,GAAG,OAAO,CAAC;QAC7C,IAAI,EAAE,oCAAoC;QAC1C,KAAK,EAAE,qCAAqC;QAC5C,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,MAAsB;YACtC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAC;YACtB,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnC,MAAM,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAE/B,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;QACzB,CAAC;KACF,CAAC,CAAC;IAGI,AAAP,MAAM,CAAC,6BAA6B,GAAG,GAAG,EAAE;QAC1C,MAAM;IACR,CAAC,CAAC;IAGK,AAAP,MAAM,CAAC,6BAA6B,GAAG,GAAG,EAAE;QAC1C,MAAM;IACR,CAAC,CAAC;;AA9BK;IADN,GAAG,EAAE;;6EAQH;AAGI;IADN,GAAG,CAAC,KAAK,CAAC;;8EAWR;AAGI;IADN,IAAI,EAAE;;8EAGL;AAGK;IADN,GAAG,CAAC,KAAK,CAAC;;8EAGT;AAhCiB,iCAAiC;IADrD,MAAM,CAAC,8BAA8B,CAAC;GAClB,iCAAiC,CAiCrD;eAjCoB,iCAAiC","sourcesContent":["import { prefix, get, put, post, del } from 'vovk';\nimport { withDto } from 'vovk-dto';\nimport { IsString, IsIn } from 'class-validator';\n\nclass GetDtoControllerOnlyEntitiesQueryDto {\n  @IsString()\n  search: string;\n}\n\nclass UpdateDtoControllerOnlyEntityBodyDto {\n  @IsIn(['bar', 'baz'])\n  foo: 'bar' | 'baz';\n}\n\nclass UpdateDtoControllerOnlyEntityQueryDto {\n  @IsString()\n  q: string;\n}\n\n@prefix('dto-controller-only-entities')\nexport default class DtoControllerOnlyEntityController {\n  @get()\n  static getDtoControllerOnlyEntities = withDto({\n    query: GetDtoControllerOnlyEntitiesQueryDto,\n    handle(req) {\n      const { search } = req.vovk.query();\n\n      return { results: [], search };\n    },\n  });\n\n  @put(':id')\n  static updateDtoControllerOnlyEntity = withDto({\n    body: UpdateDtoControllerOnlyEntityBodyDto,\n    query: UpdateDtoControllerOnlyEntityQueryDto,\n    async handle(req, params: { id: string }) {\n      const { id } = params;\n      const body = await req.vovk.body();\n      const { q } = req.vovk.query();\n\n      return { id, body, q };\n    },\n  });\n\n  @post()\n  static createDtoControllerOnlyEntity = () => {\n    // ...\n  };\n\n  @del(':id')\n  static deleteDtoControllerOnlyEntity = () => {\n    // ...\n  };\n}\n"]}