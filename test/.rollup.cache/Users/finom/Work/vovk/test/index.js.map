{"version":3,"file":"index.js","sourceRoot":"","sources":["tmp/ts/index.ts"],"names":[],"mappings":"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","sourcesContent":["// auto-generated 2025-05-09T17:16:50.048Z\n/* eslint-disable */\nimport type { VovkClientFetcher } from 'vovk';\nimport { fetcher } from 'vovk';\nimport { createRPC } from 'vovk';\nimport { fullSchema } from './fullSchema.ts';\n\nimport type { Controllers as Controllers0 } from \"../../src/app/api/foo/client/[[...client]]/route.ts\";\n\nimport type { Controllers as Controllers1 } from \"../../src/app/api/generated/[[...vovk]]/route.ts\";\n\n\nimport { validateOnClient } from 'vovk-ajv';\n\ntype Options = typeof fetcher extends VovkClientFetcher<infer U> ? U : never;\n\n  \nexport const CommonControllerRPC = createRPC<Controllers0[\"CommonControllerRPC\"], Options>(\n  fullSchema, 'foo/client', 'CommonControllerRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const StreamingControllerRPC = createRPC<Controllers0[\"StreamingControllerRPC\"], Options>(\n  fullSchema, 'foo/client', 'StreamingControllerRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const StreamingGeneratorControllerRPC = createRPC<Controllers0[\"StreamingGeneratorControllerRPC\"], Options>(\n  fullSchema, 'foo/client', 'StreamingGeneratorControllerRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const CustomSchemaControllerRPC = createRPC<Controllers0[\"CustomSchemaControllerRPC\"], Options>(\n  fullSchema, 'foo/client', 'CustomSchemaControllerRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const WithZodClientControllerRPC = createRPC<Controllers0[\"WithZodClientControllerRPC\"], Options>(\n  fullSchema, 'foo/client', 'WithZodClientControllerRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const WithYupClientControllerRPC = createRPC<Controllers0[\"WithYupClientControllerRPC\"], Options>(\n  fullSchema, 'foo/client', 'WithYupClientControllerRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const WithDtoClientControllerRPC = createRPC<Controllers0[\"WithDtoClientControllerRPC\"], Options>(\n  fullSchema, 'foo/client', 'WithDtoClientControllerRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const OpenApiControllerRPC = createRPC<Controllers0[\"OpenApiControllerRPC\"], Options>(\n  fullSchema, 'foo/client', 'OpenApiControllerRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \n\n  \nexport const NoValidationControllerOnlyEntityRPC = createRPC<Controllers1[\"NoValidationControllerOnlyEntityRPC\"], Options>(\n  fullSchema, 'generated', 'NoValidationControllerOnlyEntityRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const NoValidationControllerAndServiceEntityRPC = createRPC<Controllers1[\"NoValidationControllerAndServiceEntityRPC\"], Options>(\n  fullSchema, 'generated', 'NoValidationControllerAndServiceEntityRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const ZodControllerOnlyEntityRPC = createRPC<Controllers1[\"ZodControllerOnlyEntityRPC\"], Options>(\n  fullSchema, 'generated', 'ZodControllerOnlyEntityRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const ZodControllerAndServiceEntityRPC = createRPC<Controllers1[\"ZodControllerAndServiceEntityRPC\"], Options>(\n  fullSchema, 'generated', 'ZodControllerAndServiceEntityRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const YupControllerOnlyEntityRPC = createRPC<Controllers1[\"YupControllerOnlyEntityRPC\"], Options>(\n  fullSchema, 'generated', 'YupControllerOnlyEntityRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const YupControllerAndServiceEntityRPC = createRPC<Controllers1[\"YupControllerAndServiceEntityRPC\"], Options>(\n  fullSchema, 'generated', 'YupControllerAndServiceEntityRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const DtoControllerOnlyEntityRPC = createRPC<Controllers1[\"DtoControllerOnlyEntityRPC\"], Options>(\n  fullSchema, 'generated', 'DtoControllerOnlyEntityRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \nexport const DtoControllerAndServiceEntityRPC = createRPC<Controllers1[\"DtoControllerAndServiceEntityRPC\"], Options>(\n  fullSchema, 'generated', 'DtoControllerAndServiceEntityRPC',\n  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3000/api' } }\n);\n  \n\nexport { fullSchema };"]}