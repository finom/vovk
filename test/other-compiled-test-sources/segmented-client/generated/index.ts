// auto-generated by Vovk.ts 2025-06-11T10:36:04.465Z
import type { VovkClientFetcher } from 'vovk';
import { fetcher } from 'vovk';
import { createRPC } from 'vovk';
import { schema } from './schema.ts';


import type { Controllers as Controllers0 } from "../../../src/app/api/generated/[[...vovk]]/route.ts";



import { validateOnClient } from '../../../../packages/vovk-ajv/index.js';

type Options = typeof fetcher extends VovkClientFetcher<infer U> ? U : never;

export const NoValidationControllerOnlyEntityRPC = createRPC<Controllers0["NoValidationControllerOnlyEntityRPC"], Options>(
  schema, 'generated', 'NoValidationControllerOnlyEntityRPC',
  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3210/api' } }
);

export const NoValidationControllerAndServiceEntityRPC = createRPC<Controllers0["NoValidationControllerAndServiceEntityRPC"], Options>(
  schema, 'generated', 'NoValidationControllerAndServiceEntityRPC',
  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3210/api' } }
);

export const ZodControllerOnlyEntityRPC = createRPC<Controllers0["ZodControllerOnlyEntityRPC"], Options>(
  schema, 'generated', 'ZodControllerOnlyEntityRPC',
  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3210/api' } }
);

export const ZodControllerAndServiceEntityRPC = createRPC<Controllers0["ZodControllerAndServiceEntityRPC"], Options>(
  schema, 'generated', 'ZodControllerAndServiceEntityRPC',
  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3210/api' } }
);

export const YupControllerOnlyEntityRPC = createRPC<Controllers0["YupControllerOnlyEntityRPC"], Options>(
  schema, 'generated', 'YupControllerOnlyEntityRPC',
  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3210/api' } }
);

export const YupControllerAndServiceEntityRPC = createRPC<Controllers0["YupControllerAndServiceEntityRPC"], Options>(
  schema, 'generated', 'YupControllerAndServiceEntityRPC',
  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3210/api' } }
);

export const DtoControllerOnlyEntityRPC = createRPC<Controllers0["DtoControllerOnlyEntityRPC"], Options>(
  schema, 'generated', 'DtoControllerOnlyEntityRPC',
  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3210/api' } }
);

export const DtoControllerAndServiceEntityRPC = createRPC<Controllers0["DtoControllerAndServiceEntityRPC"], Options>(
  schema, 'generated', 'DtoControllerAndServiceEntityRPC',
  { fetcher, validateOnClient, defaultOptions: { apiRoot: 'http://localhost:3210/api' } }
);

export { schema };